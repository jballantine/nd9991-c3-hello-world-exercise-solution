version: 2.1
# Use a package of configuration called an orb.

orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

commands:
   delete_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  myjob1:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout 
        - run: echo "hello world"
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: ["aa:fe:55:cb:60:a5:f6:ca:b9:2f:99:c7:70:e8:06:4d"]
        - run:
            name: Install Ansible
            command: |
              apk add --update ansible
        - run:
            name: Run Playbook and Configure server
            command: |
              ansible-playbook main4.yml -i inventory.txt
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity.com/"
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  fail_smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run:
            name: Test job
            # Fail the job intentionally to simulate an error.
            command:  return 1
        - delete_environment  

workflows:
  myWorkflow:
    jobs:
      - myjob1
      # - create_infrastructure
      # - configure_infrastructure
      # - smoke_test
      - create_infrastructure
      - fail_smoke_test
